{"version":3,"file":"static/js/387.532e0b3d.chunk.js","mappings":"uPAEaA,EAAIC,EAAAA,GAAAA,GAAF,oEAKFC,EAAKD,EAAAA,GAAAA,GAAH,6FAMFE,EAAMF,EAAAA,GAAAA,IAAH,+FAMHG,EAAIH,EAAAA,GAAAA,EAAH,2DAIDI,EAAOJ,EAAAA,GAAAA,KAAH,8F,SClBF,SAASK,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEOC,GAAUC,EAAAA,EAAAA,MAAdC,GAOP,OALAC,EAAAA,EAAAA,YAAU,WACNH,IACAI,EAAAA,EAAAA,IAAiBJ,GAAQK,MAAK,YAAW,IAATC,EAAQ,EAARA,KAASP,EAAQO,EAAKR,KAAM,IAAES,MAAMC,QAAQC,IAC/E,GAAE,CAACT,KAGA,yBAECF,GAASA,EAAKY,OAAO,GACtB,SAACpB,EAAD,UACCQ,EAAKa,KAAI,SAAAC,GAAE,OACR,UAACpB,EAAD,WACKoB,EAAGC,cAAa,SAACpB,EAAD,CAAKqB,IAAG,yCAAoCF,EAAGC,cAAgBE,IAAKH,EAAGI,UAAWC,MAAM,SACxG,SAACxB,EAAD,CAAKqB,IAAI,sCAAsCC,IAAKH,EAAGI,UAAWC,MAAM,SACzE,UAACvB,EAAD,8BAAkB,SAACC,EAAD,UAAOiB,EAAGM,oBAC5B,UAACxB,EAAD,0BAAc,UAACC,EAAD,eAAQiB,EAAGI,kBAJpBJ,EAAGV,GADJ,OAQP,SAACP,EAAD,qCAKR,C,oKC/BKwB,EAAS,mCACfC,EAAAA,EAAAA,SAAAA,QAAyB,gCAKlB,SAASC,IACd,OAAOD,EAAAA,EAAAA,IAAA,UAHgB,sBAGiB,CACtCE,OAAQ,CACNC,QAASJ,IAGd,CAEM,SAASK,EAAiBC,GAC/B,OAAOL,EAAAA,EAAAA,IAAA,UAZW,gBAYiB,CACjCE,OAAQ,CACNC,QAASJ,EACTM,MAAOA,IAGZ,CAEM,SAASC,EAAexB,GAC7B,OAAOkB,EAAAA,EAAAA,IAAA,gBAAmBlB,GAAM,CAC9BoB,OAAQ,CACNC,QAASJ,IAGd,CAEM,SAASf,EAAiBF,GAC/B,OAAOkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,YAAkC,CACvCoB,OAAQ,CACNC,QAASJ,IAGd,CAEM,SAASQ,EAAoBzB,GAClC,OAAOkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,YAAkC,CACvCoB,OAAQ,CACNC,QAASJ,IAGd,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/useApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Ul =styled.ul`\nlist-style: none;\nmargin: 0;\npadding: 0;\n`\nexport const Li = styled.li`\ncolor: #001F54;\nfont-size: 16px;\nfont-family: 'Abel', sans-serif;\n` \n\nexport const Img = styled.img`\nwidth: 150px;\nheight:200px;\nobject-fit: cover;\nborder-radius: 5px;\n`\nexport const P = styled.p`\ncolor:#561593;\nfont-weight: 600;\n`\nexport const Span = styled.span`\nfont-family: 'Abel', sans-serif;\ncolor: #001F54;\nfont-weight: 500;\n`","import {useParams}  from 'react-router-dom';\nimport { fetchCastOfMovie } from 'services/useApi';\nimport { useEffect,useState  } from 'react';\nimport { Ul, Li, Img , P, Span} from './Cast.styled';\n\nexport default function Cast (){\n    const [cast, setCast] = useState(null);\n\nconst {id: filmId} = useParams();\n\nuseEffect(()=>{\n    filmId &&\n    fetchCastOfMovie(filmId).then(({data})=>{setCast(data.cast)}).catch(console.log)\n}, [filmId])\n    \nreturn(\n    <div>\n    \n    {cast &&  cast.length>0 ?\n    <Ul>\n    {cast.map(el=>(\n        <Li key={el.id}>\n            {el.profile_path?<Img src={`https://image.tmdb.org/t/p/w500${el.profile_path}`} alt={el.character} width=\"100\"/>\n            :<Img src='https://i.stack.imgur.com/YaL3s.jpg' alt={el.character} width=\"100\"/>}    \n            <P>Original name: <Span>{el.original_name}</Span></P>\n            <P>Character: <Span> {el.character}</Span></P>\n        </Li>))}\n        </Ul>\n        :<Span>No cast in this movie</Span>\n    }\n\n    </div>\n)\n}","import axios from 'axios';\n\nconst API_KEY ='d088d1a85817dcb4d1c5dc39bb6a0114';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst searchFilms = 'search/movie';\nconst getTrendingFilms = 'trending/movie/day';\n\nexport function fetchTrandingFilm() {\n  return axios.get(`${getTrendingFilms}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n}\n\nexport function fetchSearchFilms(query) {\n  return axios.get(`${searchFilms}`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n}\n\nexport function fetchByMovieId(id) {\n  return axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n}\n\nexport function fetchCastOfMovie(id){\n  return axios.get(`movie/${id}/credits` , {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n}\n\nexport function fetchReviewsOfMovie(id){\n  return axios.get(`movie/${id}/reviews`,  {\n    params: {\n      api_key: API_KEY,\n    },\n  })\n}"],"names":["Ul","styled","Li","Img","P","Span","Cast","useState","cast","setCast","filmId","useParams","id","useEffect","fetchCastOfMovie","then","data","catch","console","log","length","map","el","profile_path","src","alt","character","width","original_name","API_KEY","axios","fetchTrandingFilm","params","api_key","fetchSearchFilms","query","fetchByMovieId","fetchReviewsOfMovie"],"sourceRoot":""}