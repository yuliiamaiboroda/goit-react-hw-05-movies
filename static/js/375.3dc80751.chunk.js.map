{"version":3,"file":"static/js/375.3dc80751.chunk.js","mappings":"0QAGaA,EAAUC,EAAAA,GAAAA,QAAH,4DAKPC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,0VAiBRG,EAAMH,EAAAA,GAAAA,IAAH,oDAIHI,EAAMJ,EAAAA,GAAAA,IAAH,wKAWHK,EAAKL,EAAAA,GAAAA,GAAH,2EAIFM,EAAIN,EAAAA,GAAAA,EAAH,2EAIDO,EAAIP,EAAAA,GAAAA,EAAH,2EAIDQ,EAAQR,EAAAA,GAAAA,IAAF,8LAYNS,EAAKT,EAAAA,GAAAA,GAAH,uHASFU,GAAUV,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,2I,SCjEL,SAASW,IAExB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,GAAWC,EAAAA,EAAAA,MACNC,GAAUC,EAAAA,EAAAA,MAAdC,GAEDC,GAAeC,EAAAA,EAAAA,QAAON,EAASO,OAQnC,OALFC,EAAAA,EAAAA,YAAU,WACNN,IACAO,EAAAA,EAAAA,IAAeP,GAAQQ,MAAK,YAAc,IAAXC,EAAU,EAAVA,KAAYZ,EAAQY,EAAO,IAAEC,MAAMC,QAAQC,IAC3E,GAAE,CAACZ,KAGF,SAAClB,EAAD,UACGc,IAAQ,gCACRO,EAAaU,UAAW,SAAC7B,EAAD,CAAU8B,GAAE,UAAKX,EAAaU,QAAQE,UAAtC,mBACvB,UAAC7B,EAAD,YACE,SAACC,EAAD,CAAK6B,IAAG,0CAAqCpB,EAAKqB,aAAeC,IAAKtB,EAAKuB,MAAOC,MAAM,SACtF,4BACE,SAAChC,EAAD,UAAKQ,EAAKuB,SACV,UAAC9B,EAAD,2BAAe,0BAAOO,EAAKyB,aAAaC,QAAQ,SAChD,SAAChC,EAAD,wBACA,SAACD,EAAD,UAAIO,EAAK2B,YACT,SAACjC,EAAD,sBACA,SAACD,EAAD,UAAIO,EAAK4B,OAAOC,KAAI,gBAAEC,EAAF,EAAEA,KAAF,gBAAeA,EAAf,iBAG9B,UAACnC,EAAD,YACA,SAACF,EAAD,sCACA,UAACG,EAAD,YACE,yBAAI,SAACC,EAAD,CAASqB,GAAG,OAAZ,qBACJ,yBAAI,SAACrB,EAAD,CAASqB,GAAI,UAAb,+BAGN,SAAC,EAAAa,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,UAOL,C,oKCnDKC,EAAS,mCACfC,EAAAA,EAAAA,SAAAA,QAAyB,gCAKlB,SAASC,IACd,OAAOD,EAAAA,EAAAA,IAAA,UAHgB,sBAGiB,CACtCE,OAAQ,CACNC,QAASJ,IAGd,CAEM,SAASK,EAAiBC,GAC/B,OAAOL,EAAAA,EAAAA,IAAA,UAZW,gBAYiB,CACjCE,OAAQ,CACNC,QAASJ,EACTM,MAAOA,IAGZ,CAEM,SAAS5B,EAAeL,GAC7B,OAAO4B,EAAAA,EAAAA,IAAA,gBAAmB5B,GAAM,CAC9B8B,OAAQ,CACNC,QAASJ,IAGd,CAEM,SAASO,EAAiBlC,GAC/B,OAAO4B,EAAAA,EAAAA,IAAA,gBAAmB5B,EAAnB,YAAkC,CACvC8B,OAAQ,CACNC,QAASJ,IAGd,CAEM,SAASQ,EAAoBnC,GAClC,OAAO4B,EAAAA,EAAAA,IAAA,gBAAmB5B,EAAnB,YAAkC,CACvC8B,OAAQ,CACNC,QAASJ,IAGd,C","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","services/useApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\npadding: 20px;\npadding-bottom: 0;\n`\n\nexport const LinkBack = styled(Link)`\ndisplay: inline-block;\npadding: 2px 7px;\ntext-decoration: none;\ntext-align: center;\nborder: 1px #001F54 solid;\nborder-radius: 5px;\ncolor: #EAECFF;\nfont-size: 14px;\nfont-family: 'Abel', sans-serif;\nbackground-color: #0A82F3;\nwidth: 50px;\nmargin-bottom: 10px;\n:hover, :focus{\n    background-color: #29BFAB;\n}\n`\nexport const Div = styled.div`\ndisplay: flex;\ngap: 15px;\n`\nexport const Img = styled.img`\nheight: 400px;\nwidth: 300px;\nobject-fit: cover;\nborder-radius: 5px;\ntransition: scale linear 300ms ;\n:hover,:focus{\n    scale: 1.04;\n} \n`\n\nexport const H2 = styled.h2`\nfont-family: 'Abel', sans-serif;\ncolor: #001F54;\n`\nexport const P = styled.p`\nfont-family: 'Abel', sans-serif;\ncolor: #1226A7;\n`\nexport const B = styled.b`\nfont-family: 'Abel', sans-serif;\ncolor: #561593;\n`\nexport const DivAdd= styled.div`\npadding: 20px 0;\n:before , :after{\n  content: \"\";\n  display: block;\n  width: 100%;\n  height: 1px;\n  background: #001F54;\n  left: 0;\n  position: absolute;\n}\n`\nexport const Ul = styled.ul`\ndisplay: flex;\ngap: 10px;\nlist-style: none;\nmargin: 0;\npadding: 0;\npadding-bottom: 20px;\n`\n\nexport const LinkAdd = styled(Link)`\nfont-family: 'Abel', sans-serif;\ncolor: #561593;\ntext-decoration: none;\n\n:hover,\n:focus{\ncolor: #12A3A3;\n}\n`","import { useState ,useEffect, useRef, Suspense } from 'react';\nimport {\n  useLocation,\n  useParams, Outlet\n} from 'react-router-dom';\nimport { fetchByMovieId } from 'services/useApi';\nimport { Section , LinkBack, Div, Img, H2, P, B, DivAdd, Ul, LinkAdd} from './MovieDetails.styled';\n\nexport default function MovieDetails (){\n\nconst [film, setFilm] = useState(null);\n\nconst location = useLocation();\nconst {id: filmId} = useParams();\n\nconst locationBack = useRef(location.state)\n\n\nuseEffect(() => {\n    filmId &&\n    fetchByMovieId(filmId).then(({ data }) =>{ setFilm(data);}).catch(console.log)\n  }, [filmId]);\n\n  return (\n    <Section>\n      {film && <>\n      {locationBack.current && <LinkBack to={`${locationBack.current.pathname}`} >BACK</LinkBack>}\n        <Div>\n          <Img src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`} alt={film.title} width='300' />\n            <div>\n              <H2>{film.title}</H2> \n              <P>User score: <span>{film.vote_average.toFixed(2)}</span></P>\n              <B>Overview</B>\n              <P>{film.overview}</P>\n              <B>Genres</B>\n              <P>{film.genres.map(({name})=>( `${name} `))}</P>\n            </div>\n        </Div>\n    <DivAdd>\n    <P>Additional information</P>\n    <Ul>\n      <li><LinkAdd to=\"cast\">Cast</LinkAdd></li>\n      <li><LinkAdd to= \"reviews\">Reviews </LinkAdd></li>\n    </Ul>\n    </DivAdd> \n    <Suspense fallback={null}>\n      <Outlet/>\n    </Suspense>\n    \n    </>\n      } \n    </Section>\n  );\n};\n\n\n","import axios from 'axios';\n\nconst API_KEY ='d088d1a85817dcb4d1c5dc39bb6a0114';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst searchFilms = 'search/movie';\nconst getTrendingFilms = 'trending/movie/day';\n\nexport function fetchTrandingFilm() {\n  return axios.get(`${getTrendingFilms}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n}\n\nexport function fetchSearchFilms(query) {\n  return axios.get(`${searchFilms}`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n}\n\nexport function fetchByMovieId(id) {\n  return axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n}\n\nexport function fetchCastOfMovie(id){\n  return axios.get(`movie/${id}/credits` , {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n}\n\nexport function fetchReviewsOfMovie(id){\n  return axios.get(`movie/${id}/reviews`,  {\n    params: {\n      api_key: API_KEY,\n    },\n  })\n}"],"names":["Section","styled","LinkBack","Link","Div","Img","H2","P","B","DivAdd","Ul","LinkAdd","MovieDetails","useState","film","setFilm","location","useLocation","filmId","useParams","id","locationBack","useRef","state","useEffect","fetchByMovieId","then","data","catch","console","log","current","to","pathname","src","poster_path","alt","title","width","vote_average","toFixed","overview","genres","map","name","Suspense","fallback","API_KEY","axios","fetchTrandingFilm","params","api_key","fetchSearchFilms","query","fetchCastOfMovie","fetchReviewsOfMovie"],"sourceRoot":""}